func none main
    def u8 n = 10
    def u64 res = 0
    mod res = call fibonacci 0 90 0 1

    call print_char 84
    call print_char 104
    call print_char 101
    call print_char 32

    call print_u8 n
    call print_char 116
    call print_char 104
    call print_char 32

    call print_char 110
    call print_char 117
    call print_char 109
    call print_char 98
    call print_char 101
    call print_char 114
    call print_char 32

    call print_char 111
    call print_char 102
    call print_char 32

    call print_char 116
    call print_char 104
    call print_char 101
    call print_char 32

    call print_char 70
    call print_char 105
    call print_char 98
    call print_char 111
    call print_char 110
    call print_char 97
    call print_char 99
    call print_char 99
    call print_char 105
    call print_char 32
    
    call print_char 115
    call print_char 101
    call print_char 113
    call print_char 117
    call print_char 101
    call print_char 110
    call print_char 99
    call print_char 101
    call print_char 32

    call print_char 105
    call print_char 115
    call print_char 32

    call print_u64 res
 

func u64 fibonacci u8 n u8 max_depth u64 n0 u64 n1 
    if n == max_depth {
        return n1
    }
    mod n = n + 1
    def u64 temp = n1
    mod n1 = n1 + n0
    mod n0 = temp
    call fibonacci n max_depth n0 n1